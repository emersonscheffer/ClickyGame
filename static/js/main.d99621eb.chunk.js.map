{"version":3,"sources":["components/PicFrame.js","components/Canvas.js","components/AppNav.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["PicFrame","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","onClick","props","btn","id","style","backgroundImage","bgimage","backgroundColor","Component","Canvas","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","state","points","card1","card2","card3","card4","card5","card6","card7","card8","card9","card10","card11","card12","modal","toggle","setState","lose","console","log","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","t0","abrupt","stop","_x","createPics","pics","index","imageBG","push","components_PicFrame","bind","assertThisInitialized","number","i","j","Math","floor","random","_ref2","shuffle","Container","Modal","isOpen","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","for","Button","color","marginTop","block","AppNav","Navbar","dark","expand","NavbarBrand","href","Footer","App","components_AppNav","components_Canvas","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d99621eb.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class PicFrame extends Component {\n  render() {\n    return (\n      <div>\n        <div className='sqFrame' onClick={this.props.btn}>\n            <div id={this.props.id} className='insideFrame' style={{ backgroundImage : this.props.bgimage, backgroundColor: 'yellow' }} >\n            \n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PicFrame\n","import React, { Component } from 'react'\nimport PicFrame from './PicFrame';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n\n    Container,\n\n} from 'reactstrap';\n\nexport class Canvas extends Component {\n\n    state = {\n        \n        points: 0,\n        card1: false,\n        card2: false,\n        card3: false,\n        card4: false,\n        card5: false,\n        card6: false,\n        card7: false,\n        card8: false,\n        card9: false,\n        card10: false,\n        card11: false,\n        card12: false,\n\n        modal: false\n\n    }\n\n    toggle = () => {\n        this.setState({\n          modal: !this.state.modal\n        });\n    }\n\n    lose = () => {\n        console.log('YOU LOST')\n        this.setState({ points: 0})\n        this.toggle()\n    }\n    onClick = async (id) => {\n                     \n        await this.setState({ points: this.state.points + 1})\n\n        switch (id) {\n            case 1:\n                if(this.state.card1){\n                    this.lose();\n                }\n                this.setState({ card1: true });\n                break;\n            case 2:\n                if(this.state.card2){\n                    this.lose();\n                }\n                this.setState({ card2: true });\n                break;\n            case 3:\n                if(this.state.card3){\n                    this.lose();\n                }\n                this.setState({ card3: true });\n                break;\n            case 4:\n                if(this.state.card4){\n                    this.lose();\n                } \n                this.setState({ card4: true });\n                break;\n            case 5:\n                if(this.state.card5){\n                    this.lose();\n                }\n                this.setState({ card5: true });\n                break;\n            case 6:\n                if(this.state.card6){\n                    this.lose();\n                }\n                this.setState({ card6: true });\n                break;\n            case 7:\n                if(this.state.card7){\n                    this.lose();\n                }\n                this.setState({ card7: true });\n                break;\n            case 8:\n                if(this.state.card8){\n                    this.lose();\n                }\n                this.setState({ card8: true });\n                break;\n            case 9:\n                if(this.state.card9){\n                    this.lose();\n                }\n                this.setState({ card9: true });\n                break;\n            case 10:\n                if(this.state.card10){\n                    this.lose();\n                }\n                this.setState({ card10: true });\n                break;\n            case 11:\n                if(this.state.card11){\n                    this.lose();\n                }\n                this.setState({ card11: true });\n                break;\n            case 12:\n                if(this.state.card12){\n                    this.lose();\n                }\n                this.setState({ card12: true });\n                break;\n            default:\n                break;\n        }\n        \n        \n        \n    }\n\n    if(){\n\n    }\n    \n    createPics = () => {\n\n        let pics = []\n        \n        \n\n        for (let index = 1; index <= 12; index++) {\n            let id = index\n            var imageBG;\n            if(index === 1){\n                imageBG = 'url(\"pic1.png\")'\n            } else if(index === 2){\n                imageBG = 'url(\"pic2.png\")'\n            } else if(index === 3){\n                imageBG = 'url(\"pic3.png\")'\n            } else if(index === 4){\n                imageBG = 'url(\"pic4.png\")'\n            } else if(index === 5){\n                imageBG = 'url(\"pic5.png\")'\n            } else if(index === 6){\n                imageBG = 'url(\"pic6.png\")'\n            } else if(index === 7){\n                imageBG = 'url(\"pic7.png\")'\n            } else if(index === 8){\n                imageBG = 'url(\"pic8.png\")'\n            } else if(index === 9){\n                imageBG = 'url(\"pic9.png\")'\n            } else if(index === 10){\n                imageBG = 'url(\"pic10.png\")'\n            } else if(index === 11){\n                imageBG = 'url(\"pic11.png\")'\n            } else if(index === 12){\n                imageBG = 'url(\"pic12.png\")'\n            }\n            \n                    \n                \n            pics.push(<PicFrame\n                \n                \n                key={index}\n                id={'number'+(index)}\n                btn={this.onClick.bind(this, id)}\n                number={index}\n                bgimage={imageBG}\n                \n                />)\n\n                \n        }\n        \n       ///\n        function shuffle(a) {\n            for (let i = a.length - 1; i > 0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [a[i], a[j]] = [a[j], a[i]];\n            }\n            return a;\n        }\n\n        function updateShuffle(){\n            shuffle(pics)\n        }\n\n        updateShuffle()\n        \n        return  pics\n        \n    }\n\n  render() {\n    return (\n      <div>\n          <Container>\n              <p id=\"rnd\">\n                Click on an image to earn points, but don't click on any more than once!  \n              </p>\n          \n              <h1>Your Score: {this.state.points} </h1>\n            <div className='canvasLay'>\n                {this.createPics()}\n            </div>\n          </Container>\n\n          <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n        >\n          <ModalHeader toggle={this.toggle}>\n            You Lost\n          </ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"book\">\n                You guessed incorrectly!\n                </Label>\n                \n                <Button\n\n                  color=\"dark\"\n                  style={{marginTop: '2rem'}}\n                  block\n\n                >\n                  Play Again\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    )\n  }\n}\n\n\nexport default Canvas","import React, { Component } from 'react'\n\nimport {\n    Navbar,\n    NavbarBrand,\n    Container\n} from 'reactstrap'\n\n\nexport class AppNav extends Component {\n\n    state = {\n        isOpen: false\n    }   \n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    \n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\"  className=\"mb-5\">\n            <Container>\n                <NavbarBrand href='/'>\n                    Clicky Game by Emerson\n                </NavbarBrand>\n            </Container>\n        </Navbar>\n      </div>\n    )\n  }\n}\n\nexport default AppNav\n","import React, { Component } from 'react'\n\nexport class Footer extends Component {\n  render() {\n    return (\n      <div>\n        <footer>\n            <div id='footer'>\n                create by emerson\n            </div>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport Canvas from './components/Canvas';\nimport AppNav from './components/AppNav';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppNav />\n      <Canvas />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}